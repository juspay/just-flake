{
  perSystem = { config, pkgs, lib, ... }: {
    options =
      let
        inherit (lib) types;
      in
      {
        just-flake = lib.mkOption {
          default = { };
          type = types.submoduleWith {
            specialArgs = { inherit pkgs; };
            modules = [{
              imports = [
                ./nix/features.nix
              ];

              options = {
                commonFileName = lib.mkOption {
                  type = lib.types.str;
                  default = "just-flake.just";
                  description = ''
                    The name of the common justfile generated by this module.
                  '';
                };

                outputs.devShell = lib.mkOption {
                  type = lib.types.package;
                  readOnly = true;
                  description = ''
                    The output devShell to include in `inputsFrom`.
                  '';
                };
              };
            }];
          };
        };
      };
    config =
      let
        cfg = config.just-flake;
      in
      {
        just-flake.outputs.devShell =
          let
            commonJustfile = pkgs.writeTextFile {
              name = "justfile";
              text =
                lib.concatStringsSep "\n"
                  (lib.mapAttrsToList (name: feature: feature.outputs.justfile) cfg.features);
            };
          in
          pkgs.mkShell {
            packages = [ pkgs.just ];
            shellHook = ''
              ln -sf ${builtins.toString commonJustfile} ./${cfg.commonFileName}

              echo
              echo "üçéüçé Run 'just <recipe>' to get started"
              just --list
            '';
          };
      };
  };
}
